// <auto-generated />
using System;
using DigitalBank.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DigitalBank.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DigitalBank.Domain.Entities.Cliente", b =>
                {
                    b.Property<long?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<DateTime>("dataDeCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dataDeNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("situacao")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("DigitalBank.Domain.Entities.Conta", b =>
                {
                    b.Property<long?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("clienteid")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("dataDeCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dataDeFinalizacao")
                        .HasColumnType("datetime2");

                    b.Property<long>("numero")
                        .HasColumnType("bigint");

                    b.Property<decimal>("saldo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("situacao")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("clienteid");

                    b.ToTable("Contas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Conta");
                });

            modelBuilder.Entity("DigitalBank.Domain.Entities.ContaCorrente", b =>
                {
                    b.HasBaseType("DigitalBank.Domain.Entities.Conta");

                    b.Property<decimal>("limite")
                        .HasColumnType("decimal(18,2)");

                    b.HasDiscriminator().HasValue("ContaCorrente");
                });

            modelBuilder.Entity("DigitalBank.Domain.Entities.Conta", b =>
                {
                    b.HasOne("DigitalBank.Domain.Entities.Cliente", "cliente")
                        .WithMany("contas")
                        .HasForeignKey("clienteid");

                    b.Navigation("cliente");
                });

            modelBuilder.Entity("DigitalBank.Domain.Entities.Cliente", b =>
                {
                    b.Navigation("contas");
                });
#pragma warning restore 612, 618
        }
    }
}
